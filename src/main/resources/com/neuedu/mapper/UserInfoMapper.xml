<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into neuedu_user (id, username, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.UserInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from neuedu_user
  </select>
  <select id="exsitsUsername" parameterType="string" resultType="int">

    select count(*) from neuedu_user where username=#{username}
  </select>
  <select id="findByUsernameAndPassword" parameterType="com.neuedu.pojo.UserInfo"
  resultMap="BaseResultMap">

    select id, username, password, email, phone, question, answer, role, create_time,
    update_time from neuedu_user where username=#{user.username} and password=#{user.password}

  </select>
  <select id="findByFenYe" parameterType="map"
          resultMap="BaseResultMap">

    select id, username, password, email, phone, question, answer, role, create_time,
    update_time from neuedu_user limit #{pageNum},#{pageSize}

  </select>

  <!--copy-->
  <select id="findByUserName" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM neuedu_user WHERE username=#{username}
  </select>

  <select id="findByEmail" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM neuedu_user WHERE email=#{email}
  </select>

  <select id="findByRole" parameterType="int" resultType="com.neuedu.pojo.UserInfo">
    select * from neuedu_user where role=#{0}
  </select>

  <select id="findQuestionByUaername" parameterType="string" resultType="string">
    select question from neuedu_user where username=#{username}
  </select>

  <select id="forgetPasswordCheckAnswer" parameterType="map" resultType="int">
    select count(*) from neuedu_user where username=#{username} and question=#{question} AND answer=#{answer}
  </select>

  <!--更新密码-->
  <update id="updatePassword" parameterType="map" >
    update neuedu_user
    <set>
      <if test="passwordNew!=null">
        password = #{passwordNew,jdbcType=VARCHAR}, update_time = now()
      </if>
    </set>
    where username = #{username,jdbcType=INTEGER}
  </update>
</mapper>